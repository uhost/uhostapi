<%
require 'socket'
 
def local_ip
  @local_ip ||= begin
    # turn off reverse DNS resolution temporarily
    orig, Socket.do_not_reverse_lookup = Socket.do_not_reverse_lookup, true
 
    UDPSocket.open do |s|
      s.connect '64.233.187.99', 1
      s.addr.last
    end
  ensure
    Socket.do_not_reverse_lookup = orig
  end
end
 
def local_port ; 8123 ; end
def http_proxy_url ; "http://#{local_ip}:#{local_port}" ; end
 
def proxy_running?
  socket = TCPSocket.new(local_ip, local_port)
  true
rescue SocketError, Errno::ECONNREFUSED,
  Errno::EHOSTUNREACH, Errno::ENETUNREACH, IOError
  false
rescue Errno::EPERM, Errno::ETIMEDOUT
  false
ensure
  socket && socket.close
end
%>
---
driver:
  name: vagrant

<% if proxy_running? %>
driver_config:
  http_proxy: <%= http_proxy_url %>
  https_proxy: <%= http_proxy_url %>
<% end %>

provisioner:
  name: chef_zero
  client_rb:
    node_name: uhostserver.getuhost.org
    ssl_verify_mode: :verify_peer

platforms:
  - name: ubuntu-14.04
    driver:
      box: ubuntu/trusty64
  - name: ubuntu-12.04
    driver:
      box: hashicorp/precise64
  - name: fedora-20
    driver:
      box: chef/fedora-20
  - name: centos-6.5
    driver:
      box: chef/centos-6.5
  - name: centos-7.0
    driver:
      box: chef/centos-7.0

suites:
  - name: default
    run_list: ["recipe[uhostchef11server::default]"]
    attributes:
